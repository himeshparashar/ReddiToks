import { TTSService } from "./src/application/services/TTSServiceClean";
import { LLMService } from "./src/application/services/LLMService";
import { RawThreadData } from "./src/application/services/RedditService";

// Mock Reddit data for testing
const mockRedditData: RawThreadData = {
  title: "AITA for telling my roommate that her cooking smells terrible?",
  url: "https://reddit.com/r/AmItheAsshole/comments/test",
  author: "TestUser123",
  content: "I told my roommate her cooking smells bad and now she's upset.",
  comments: [
    {
      author: "RedditWisdom",
      content: "NTA - You have a right to feel comfortable in your home.",
      upvotes: 245,
      depth: 0,
    },
    {
      author: "CookingExpert",
      content: "YTA - You could have been more diplomatic about it.",
      upvotes: 156,
      depth: 0,
    },
  ],
  upvotes: 1547,
  subreddit: "AmItheAsshole",
};

async function testTTSService() {
  console.log("🎵 Testing ElevenLabs TTS Service...\n");

  try {
    // Step 1: Generate script using LLM service
    console.log("📝 Step 1: Generating script with LLM service...");
    const llmService = new LLMService();
    const script = await llmService.generateStructuredScript(mockRedditData);

    console.log(
      `✅ Generated script with ${script.lines.length} dialogue lines\n`
    );

    // Step 2: Check ElevenLabs API key
    const elevenLabsKey = process.env.ELEVENLABS_API_KEY;

    if (!elevenLabsKey || elevenLabsKey === "your_elevenlabs_key_here") {
      console.log("⚠️  No ElevenLabs API key found!");
      console.log("📝 To test with real ElevenLabs API:");
      console.log("   1. Get API key from: https://elevenlabs.io/");
      console.log(
        "   2. Edit .env file and add: ELEVENLABS_API_KEY=your_actual_key"
      );
      console.log("   3. Run this test again\n");
      console.log("🔄 Running with mock implementation for now...\n");
    } else {
      console.log("✅ ElevenLabs API key found! Testing with real API...\n");
    }

    // Step 3: Generate audio with TTS service
    console.log("🎤 Step 2: Generating audio with TTS service...");
    const ttsService = new TTSService();
    const scriptWithAudio = await ttsService.generateAudioForScript(script);

    console.log("✅ Audio generation completed!\n");

    // Step 4: Display results
    console.log("📋 Script with Audio Details:");
    console.log(`- Script ID: ${scriptWithAudio.id}`);
    console.log(`- Background: ${scriptWithAudio.background}`);
    console.log(`- Characters: ${scriptWithAudio.characters.join(", ")}`);
    console.log(
      `- Total duration: ${scriptWithAudio.lines
        .reduce((total, line) => total + line.duration, 0)
        .toFixed(2)}s\n`
    );

    console.log("🎭 Dialogue Lines with Audio:");
    console.log("=".repeat(60));
    scriptWithAudio.lines.forEach((line: any, index: number) => {
      console.log(
        `${index + 1}. [${line.speaker}] (${line.duration.toFixed(1)}s)`
      );
      console.log(`   📝 Text: "${line.text}"`);
      console.log(`   🎵 Audio: ${line.audioFilePath}`);
      console.log(
        `   ⏰ Time: ${line.startTime.toFixed(1)}s - ${(
          line.startTime + line.duration
        ).toFixed(1)}s`
      );
      console.log("");
    });

    if (!elevenLabsKey || elevenLabsKey === "your_elevenlabs_key_here") {
      console.log(
        "💡 This used mock audio generation. With a real API key, you'll get actual audio files!"
      );
    } else {
      console.log("🎉 This script now has real audio generated by ElevenLabs!");
      console.log(
        "📁 Audio files are saved in the temp directory for video generation."
      );
    }
  } catch (error) {
    console.error("❌ Error testing TTS service:", error);
  }
}

// Run the test
testTTSService();
